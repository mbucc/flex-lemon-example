lemon-parser-tutorial

	Lemon [0] is a yacc replacement that is written by the same author 
	as SQLite. It's uses a simpler grammar than yacc, is thread-safe, 
	and is designed to run inside long-running processes.
    
	This repo started from David Wheeler's C port [1] of a C++ lemon 
	tutorial [2].

	After much time spent trying to figure out error handling with lex,
	I was very happy to find the tokenizer in Troy Hanson's lemon
	example [3].  The one here is pretty much a verbatim copy.


	[0] http://www.hwaci.com/sw/lemon/
	[1] https://github.com/bskari/lemon-parser-tutorial
	[2] https://github.com/bskari
	[3] https://github.com/troydhanson/misc/tree/master/text_handling/lemon


Status

	The tokenizing works and I've made a good start on a test suite.

	The date expressions are not checked for semantics; for example,
	January 54 is considered a valid date.
	

Build

	make

		This currently builds an object file that provides the method

				int isadate(const char *, int *);

		which returns 0 if the string is a date, and 1 otherwise.

		If the string is not recognized as a date, the column at which 
		the parsing stopped is put in the second argument.


Test

	make test



Other Lemon references:

	http://linuxgazette.net/106/chirico.html

	http://brskari.wordpress.com/2012/04/29/writing-a-basic-shell-using-flex-and-lemon-part-1/


